{"version":3,"sources":["store/reducer.js","components/SearchBar/index.jsx","components/WeatherDisplay/index.jsx","components/HistoryDisplay/index.jsx","App.js","reportWebVitals.js","index.js"],"names":["reducer","state","action","type","isError","isLoading","weather","payload","history","filter","SearchBar","dispatch","React","useState","city","setCity","country","setCountry","e","a","preventDefault","axios","get","params","q","appid","then","res","data","time","Date","now","catch","err","className","onSubmit","name","value","onInput","target","onClick","WeatherDisplay","main","description","temp_min","temp_max","humidity","moment","format","HistoryDisplay","length","map","i","handleSearch","handleDelete","initialState","undefined","App","useReducer","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0SAAO,SAASA,EAAQC,EAAOC,GAC7B,OAAQA,EAAOC,MACb,IAAK,UACH,OAAO,2BACFF,GADL,IAEEG,SAAS,EACTC,WAAW,IAEf,IAAK,UACH,OAAO,2BACFJ,GADL,IAEEK,QAASJ,EAAOK,QAChBH,SAAS,EACTC,WAAW,IAEf,IAAK,aACH,OAAO,2BACFJ,GADL,IAEEO,QAAQ,GAAD,mBAAMP,EAAMO,SAAZ,CAAqBN,EAAOK,YAEvC,IAAK,mBACH,OAAO,2BACFN,GADL,IAEEO,QAASP,EAAMO,QAAQC,QAAO,SAAAD,GAAO,OAAIA,IAAUN,EAAOK,aAE9D,IAAK,QACH,OAAO,2BACFN,GADL,IAEEG,SAAS,EACTC,WAAW,IAEf,QACE,OAAOJ,G,6DC5BN,SAASS,EAAT,GAAgC,IAAZC,EAAW,EAAXA,SAAW,EACVC,IAAMC,SAAS,aADL,mBAC3BC,EAD2B,KACrBC,EADqB,OAEJH,IAAMC,SAAS,aAFX,mBAE3BG,EAF2B,KAElBC,EAFkB,iDAGlC,WAA4BC,GAA5B,SAAAC,EAAA,sDACID,EAAEE,iBACFT,EAAS,CAAER,KAAM,YACjBkB,IAAMC,IAAI,kDAAmD,CACzDC,OAAQ,CACJC,EAAGV,EAEHW,MAAO,sCAEZC,MAAK,SAAAC,GACJ,IAAMrB,EAAO,2BACNqB,EAAIC,MADE,IAETd,OACAE,UACAa,KAAMC,KAAKC,QAEfpB,EAAS,CAAER,KAAM,UAAWI,QAASD,IACrCK,EAAS,CAAER,KAAM,aAAcI,QAAS,CAACO,OAAME,UAASa,KAAMC,KAAKC,YACpEC,OAAM,SAAAC,GACLtB,EAAS,CAAER,KAAM,aAnBzB,4CAHkC,sBA8BlC,OACI,uBAAM+B,UAAU,aAAaC,SA/BC,4CA+B9B,UACI,wBAAOC,KAAK,OAAZ,mBACU,uBAAOC,MAAOvB,EAAMwB,QAAS,SAAApB,GAAC,OAAGH,EAAQG,EAAEqB,OAAOF,aAE5D,wBAAOD,KAAK,UAAZ,sBACa,uBAAOC,MAAOrB,EAASsB,QAAS,SAAApB,GAAC,OAAGD,EAAWC,EAAEqB,OAAOF,aAErE,4CACA,wBAAQG,QAdhB,SAAqBtB,GACjBA,EAAEE,iBACFL,EAAQ,IACRE,EAAW,KAWP,sB,mCCtCL,SAASwB,EAAT,GAAiC,IAARb,EAAO,EAAPA,KAC5B,OAAIA,EAAKvB,UACE,qBAAK6B,UAAU,kBAAf,SAAiC,cAAC,IAAD,MAExCN,EAAKxB,QAED,qBAAK8B,UAAU,oBAAf,SACI,qBAAKA,UAAU,4BAAf,yBAIRN,EAAKtB,QACE,mCACH,sBAAK4B,UAAU,UAAf,UACI,oBAAGA,UAAU,eAAb,UAA6BN,EAAKtB,QAAQQ,KAA1C,KAAkDc,EAAKtB,QAAQU,WAC/D,mBAAGkB,UAAU,eAAb,SAA6BN,EAAKtB,QAAQA,QAAQ,GAAGoC,OACrD,gCACI,kCACI,+BACI,8CACA,6BAAKd,EAAKtB,QAAQA,QAAQ,GAAGqC,iBAEjC,+BACI,8CACA,+BAAKf,EAAKtB,QAAQoC,KAAKE,SAAvB,WAAsChB,EAAKtB,QAAQoC,KAAKG,SAAxD,cAEJ,+BACI,2CACA,+BAAKjB,EAAKtB,QAAQoC,KAAKI,SAAvB,UAEJ,+BACI,uCACA,6BAAKC,IAAOnB,EAAKtB,QAAQoC,KAAKb,MAAMmB,OAAO,qCAO5D,6B,0BCnCJ,SAASC,EAAT,GAA2C,IAAlBrB,EAAiB,EAAjBA,KAAMjB,EAAW,EAAXA,SAwBlC,OAAIiB,EAAKsB,OAAS,EACP,qBAAKhB,UAAU,UAAf,SACFN,EAAKuB,KAAI,SAAC3C,EAAS4C,GAAV,OACN,oBAAGlB,UAAU,eAAb,UACI,uBAAMA,UAAU,oBAAhB,UACKkB,EAAE,EADP,KACY5C,EAAQM,KADpB,KAC4BN,EAAQQ,WAEpC,uBAAMkB,UAAU,qBAAhB,UACKa,IAAOvC,EAAQqB,MAAMmB,OAAO,cAC7B,cAAC,IAAD,CAAWd,UAAU,eAAeM,QAAS,kBAhCjE,YAAwC,IAAjB1B,EAAgB,EAAhBA,KAAME,EAAU,EAAVA,QACzBL,EAAS,CAAER,KAAM,YACjBkB,IAAMC,IAAI,kDAAmD,CACzDC,OAAQ,CACJC,EAAGV,EAEHW,MAAO,sCAEZC,MAAK,SAAAC,GACJ,IAAMrB,EAAO,2BACNqB,EAAIC,MADE,IAETd,OACAE,UACAa,KAAMC,KAAKC,QAEfpB,EAAS,CAAER,KAAM,UAAWI,QAASD,OACtC0B,OAAM,SAAAC,GACLtB,EAAS,CAAER,KAAM,aAe8CkD,CAAa7C,MAChE,cAAC,IAAD,CAAkB0B,UAAU,eAAeM,QAAS,kBAbxE,SAAsBhC,GAClBG,EAAS,CAAER,KAAM,mBAAoBI,QAASC,IAY4B8C,CAAa9C,WAP9C4C,QAatC,qBAAKlB,UAAU,oBAAf,uB,UC1CLqB,EAAe,CACnBlD,WAAW,EACXC,aAASkD,EACThD,QAAS,IAgBIiD,MAbf,WAAgB,IAAD,EACa7C,IAAM8C,WAAW1D,EAASuD,GADvC,mBACNtD,EADM,KACCU,EADD,KAEb,OACE,sBAAKuB,UAAU,MAAf,UACE,oBAAIA,UAAU,YAAd,6BACA,cAAC,EAAD,CAAWvB,SAAUA,IACrB,cAAC,EAAD,CAAgBiB,KAAM3B,IACtB,oBAAIiC,UAAU,YAAd,4BACA,cAAC,EAAD,CAAgBN,KAAM3B,EAAMO,QAASG,SAAUA,QCTtCgD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBnC,MAAK,YAAkD,IAA/CoC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.9d23d0c6.chunk.js","sourcesContent":["export function reducer(state, action) {\n  switch (action.type) {\n    case 'loading':\n      return {\n        ...state,\n        isError: false,\n        isLoading: true,\n      }\n    case 'success':\n      return {\n        ...state,\n        weather: action.payload,\n        isError: false,\n        isLoading: false,\n      }\n    case 'addHistory':\n      return {\n        ...state,\n        history: [...state.history, action.payload],\n      }\n    case 'deleteOneHistory':\n      return {\n        ...state,\n        history: state.history.filter(history => history!==action.payload),\n      }\n    case 'error':\n      return {\n        ...state,\n        isError: true,\n        isLoading: false,\n      }\n    default:\n      return state;\n  }\n}\n","import React from 'react'\nimport axios from 'axios'\nimport './index.css'\n\nexport function SearchBar({dispatch}) {\n    const [city, setCity] = React.useState('singapore')\n    const [country, setCountry] = React.useState('singapore')\n    async function handleSubmit(e) {\n        e.preventDefault()\n        dispatch({ type: 'loading'})\n        axios.get('https://api.openweathermap.org/data/2.5/weather', {\n            params: {\n                q: city,\n                // country,\n                appid: '7852f059758162bcc8f748aaf08ad43b'\n            }\n        }).then(res => {\n            const weather = {\n                ...res.data,\n                city,\n                country,\n                time: Date.now(),\n            }\n            dispatch({ type: 'success', payload: weather });\n            dispatch({ type: 'addHistory', payload: {city, country, time: Date.now() } });\n        }).catch(err => {\n            dispatch({ type: 'error' });\n        })\n    }\n    function handleClear(e) {\n        e.preventDefault();\n        setCity('')\n        setCountry('')\n    }\n    return (\n        <form className=\"search-bar\" onSubmit={handleSubmit}>\n            <label name=\"city\">\n                City: <input value={city} onInput={e=> setCity(e.target.value)} />\n            </label>\n            <label name=\"country\">\n                Country: <input value={country} onInput={e=> setCountry(e.target.value)} />\n            </label>\n            <button>Submit</button>\n            <button onClick={handleClear}>Clear</button>\n        </form>\n    )\n}","import React from 'react'\nimport moment from 'moment'\nimport { AiOutlineLoading } from 'react-icons/ai'\nimport './index.css'\n\nexport function WeatherDisplay({data}) {\n    if (data.isLoading) {\n        return <div className=\"weather-loading\"><AiOutlineLoading /></div>\n    }\n    if (data.isError) {\n        return (\n            <div className=\"weather-not-found\">\n                <div className=\"weather-not-found-content\">Not found</div>\n            </div>\n        )\n    }\n    if (data.weather) {\n        return <>\n            <div className=\"weather\">\n                <p className=\"weather-city\">{data.weather.city}, {data.weather.country}</p>\n                <p className=\"weather-main\">{data.weather.weather[0].main}</p>\n                <table>\n                    <tbody>\n                        <tr>\n                            <td>Description:</td>\n                            <td>{data.weather.weather[0].description}</td>\n                        </tr>\n                        <tr>\n                            <td>Temperature:</td>\n                            <td>{data.weather.main.temp_min}°C ~ {data.weather.main.temp_max}°C</td>\n                        </tr>\n                        <tr>\n                            <td>Humidity:</td>\n                            <td>{data.weather.main.humidity}%</td>\n                        </tr>\n                        <tr>\n                            <td>Time:</td>\n                            <td>{moment(data.weather.main.time).format('YYYY-MM-DD HH:mm A')}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </>\n    }\n    return <></>\n}","import React from 'react'\nimport moment from 'moment'\nimport axios from 'axios'\n// import { BsSearch } from \"react-icons/ai\";\nimport { FaSistrix } from 'react-icons/fa';\nimport { RiDeleteBin5Line } from \"react-icons/ri\";\n\nimport './index.css'\n\nexport function HistoryDisplay({data, dispatch}) {\n    function handleSearch({city, country}) {\n        dispatch({ type: 'loading'})\n        axios.get('https://api.openweathermap.org/data/2.5/weather', {\n            params: {\n                q: city,\n                // country,\n                appid: '7852f059758162bcc8f748aaf08ad43b'\n            }\n        }).then(res => {\n            const weather = {\n                ...res.data,\n                city,\n                country,\n                time: Date.now(),\n            }\n            dispatch({ type: 'success', payload: weather });\n        }).catch(err => {\n            dispatch({ type: 'error' });\n        })\n    }\n    function handleDelete(history) {\n        dispatch({ type: 'deleteOneHistory', payload: history });\n    }\n    if (data.length > 0) {\n        return <div className=\"history\">\n            {data.map((history, i) => (\n                <p className=\"history-item\" key={i}>\n                    <span className=\"history-item-left\">\n                        {i+1}. {history.city}, {history.country}\n                    </span>\n                    <span className=\"history-item-right\">\n                        {moment(history.time).format('HH:mm:ss A')}\n                        <FaSistrix className=\"history-icon\" onClick={() => handleSearch(history)} />\n                        <RiDeleteBin5Line className=\"history-icon\" onClick={() => handleDelete(history)} />\n                    </span>\n                </p>\n            ))}\n        </div>\n    }\n    return <div className=\"history-no-record\">No Record</div>\n}","import React from 'react'\nimport { reducer } from './store/reducer';\nimport { SearchBar } from './components/SearchBar/index'\nimport { WeatherDisplay } from './components/WeatherDisplay/index'\nimport { HistoryDisplay } from './components/HistoryDisplay/index'\nimport './App.css';\n\nconst initialState = {\n  isLoading: false,\n  weather: undefined,\n  history: []\n}\n\nfunction App() {\n  const [state, dispatch] = React.useReducer(reducer, initialState)\n  return (\n    <div className=\"App\">\n      <h2 className=\"App-title\">Today's weather</h2>\n      <SearchBar dispatch={dispatch} />\n      <WeatherDisplay data={state} />\n      <h2 className=\"App-title\">Search history</h2>\n      <HistoryDisplay data={state.history} dispatch={dispatch} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}